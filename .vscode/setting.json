{
  "editor.cursorSmoothCaretAnimation": true,
  "editor.unfoldOnClickAfterEndOfLine": true,
  "editor.fontFamily": "Fira Code,Operator Mono,Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.guides.bracketPairs": false,
  "editor.minimap.maxColumn": 120,
  "editor.wordWrap": "off",
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.scrollBeyondLastLine": false,
  "editor.suggestSelection": "first",
  "editor.snippetSuggestions": "top",
  "editor.tabCompletion": "on",
  "editor.useTabStops": false,
  "editor.renderWhitespace": "all",
  "editor.cursorBlinking": "expand",
  "editor.minimap.autohide": true,
  "editor.autoClosingBrackets": "always",
  "editor.autoClosingQuotes": "always",
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.experimental.stickyScroll.enabled": true,
  "editor.accessibilitySupport": "on",
  "editor.fastScrollSensitivity": 10,
  "editor.foldingImportsByDefault": true,
  "editor.mouseWheelZoom": true,
  "editor.suggest.showStatusBar": true,
  "editor.smoothScrolling": true,
  "editor.guides.indentation": false,
  "editor.inlayHints.enabled": "off",
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.autoClosingDelete": "always",
  "editor.autoClosingOvertype": "always",
  "editor.lineNumbers": "relative",
  "editor.quickSuggestions": {
    "comments": true,
    "other": true,
    "strings": true
  },
  "editor.tabSize": 2,
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    "source.fixAll.eslint": true,
    "source.fixAll.stylelint": true,
    "source.organizeImports": false
  },
  "window.zoomLevel": -1,
  "window.commandCenter": true,
  "window.autoDetectColorScheme": true,
  "window.dialogStyle": "custom",
  "window.titleBarStyle": "custom",
  "window.title": "${dirty} ${activeEditorMedium} | ${rootName}",
  "workbench.editor.showTabs": false,
  "workbench.iconTheme": "vscode-icons",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.list.smoothScrolling": true,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 10,
  "workbench.editor.scrollToSwitchTabs": true,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.editor.splitInGroupLayout": "vertical",
  "workbench.editor.untitled.hint": "hidden",
  "workbench.startupEditor": "none",
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"
  },
  "workbench.editor.autoLockGroups": {
    "default": true,
    "jupyter-notebook": true,
    "imagePreview.previewEditor": true,
    "mainThreadWebview-markdown.preview": true,
    "workbench.editorinputs.searchEditorInput": true
  },
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "onFocusChange",
  "files.trimFinalNewlines": true,
  "files.autoGuessEncoding": true,
  "git.autoStash": true,
  "git.enabled": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.defaultProfile.windows": "NuShell",
  "terminal.integrated.fontFamily": "Menlo for Powerline",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.env.windows": {
    "CHERE_INVOKING": "1"
  },
  "terminal.integrated.profiles.windows": {
    "NuShell": {
      "icon": "terminal-powershell",
      "path": "${env:APP}\\nu\\bin\\nu.exe"
    },
    "PowerShell": {
      "icon": "terminal-powershell",
      "source": "PowerShell"
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    "Command Prompt": {
      "args": [],
      "icon": "terminal-cmd",
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ]
    }
  },
  "search.exclude": {
    "**/*.code-search": true,
    "**/*.lock": true,
    "**/*-lock.yaml": true,
    "**/*.log": true,
    "**/bower_components": true,
    "**/node_modules": true,
    ".nuxt": true,
    ".vscode": true,
    "LICENSE": true,
    ".gitgnore": true
  },
  "html.format.indentHandlebars": true,
  "html.format.templating": true,
  "javascript.format.enable": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.format.insertSpaceAfterCommaDelimiter": false,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
  "javascript.format.insertSpaceAfterSemicolonInForStatements": false,
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": false,
  "typescript.format.enable": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.format.insertSpaceAfterCommaDelimiter": false,
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": false,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": false,
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": false,
  "typescript.locale": "zh-CN",
  "[css]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[less]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[html]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[javascript|react]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescript|react]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "css.lint.unknownAtRules": "ignore",
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[ignore]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[vue]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[properties]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[xml]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 100,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2023/4/27 16:29:03",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).ts,$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "fileNestingUpdater.autoUpdate": false,
  "audioCues.lineHasBreakpoint": "off",
  "audioCues.lineHasError": "off",
  "audioCues.lineHasFoldedArea": "off",
  "audioCues.lineHasInlineSuggestion": "off",
  "audioCues.noInlayHints": "off",
  "audioCues.onDebugBreak": "off",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.wordWrap": "off",
  "debug.javascript.autoAttachFilter": "smart",
  "debug.onTaskErrors": "debugAnyway",
  "emmet.triggerExpansionOnTab": true,
  "eslint.format.enable": true,
  "extensions.ignoreRecommendations": true,
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "leetcode.endpoint": "leetcode-cn",
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.workspaceFolder": "e:\\LeetCode",
  "typeChallenges.workspaceFolder": "e:\\LeetCode\\ts_type_challenges",
  "typeChallenges.defaultLanguage": "en",
  "vite.showTerminal": true,
  "vite.autoStart": false,
  "scm.diffDecorationsGutterWidth": 2,
  "GitCommitPlugin.ShowEmoji": false,
  "unocss.colorPreview": false,
  "unocss.disable": true,
  "csscomb.formatOnSave": true,
  "projectManager.git.baseFolders": [
    "E:\\Fork",
    "E:\\Home",
    "E:\\VSCode"
  ],
  "i18n-ally.sortKeys": true,
  "i18n-ally.displayLanguage": "zh-cn",
  "i18n-ally.editor.preferEditor": true,
  "i18n-ally.extract.autoDetect": true,
  "i18n-ally.extract.keyMaxLength": 120,
  "i18n-ally.fullReloadOnChanged": true,
  "i18n-ally.ignoredLocales": [
    "packages/web/src/locales/lang/index.ts",
    "index"
  ],
  "vim.leader": "<space>", // 绑定 vim 前导键
  "vim.easymotion": true, // 启用 easymotion 插件
  "vim.incsearch": true,
  "vim.useSystemClipboard": true, // 是否启用系统粘贴板作为 vim 寄存器
  "vim.useCtrlKeys": false, // 是否由 vim 接管ctrl+any的按键
  "vim.hlsearch": true, // 是否突出显示与当前搜索匹配的所有文本
  "vim.highlightedyank.enable": true, // 被复制时是否高亮
  "vim.highlightedyank.duration": 500, // 被复制时高亮持续时间：0.5秒
  "vim.foldfix": true, // 开启 vim 配置文件
  "vim.autoSwitchInputMethod.enable": true,
  "vim.autoSwitchInputMethod.defaultIM": "1033",
  "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\im-select\\im-select.exe",
  "vim.autoSwitchInputMethod.switchIMCmd": "D:\\im-select\\im-select.exe {im} and D:\\im-select\\im-select.exe 2052",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-n>": false
  },
  // 命令模式下的非递归案件绑定 相当于norecmap
  "vim.commandLineModeKeyBindingsNonRecursive": [],
  // 插入模式下的非递归按键绑定 相当于 imap
  "vim.insertModeKeyBindings": [],
  // 可视模式下的非递归按键绑定
  "vim.visualModeKeyBindings": [
    { // 粘贴不替换文本
      "before": [
        "p"
      ],
      "after": [
        "P"
      ]
    },
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "whichkey.show"
      ]
    }
  ],
  // 普通模式下非递归绑定按键 相当于 vim 中的 noremap
  "vim.normalModeKeyBindingsNonRecursive": [
    { // 屏幕『向上』移动一页
      "before": [
        "{"
      ],
      "after": [
        "<C-b>"
      ]
    },
    { // 屏幕『向下』移动一页
      "before": [
        "}"
      ],
      "after": [
        "<C-f>"
      ]
    },
    { // 屏幕『向上』移动半页
      "before": [
        "["
      ],
      "after": [
        "<C-u>"
      ]
    },
    { // 屏幕『向上』移动半页
      "before": [
        "]"
      ],
      "after": [
        "<C-d>"
      ]
    },
    { // 断行并进入编辑状态
      "before": [
        "K"
      ],
      "commands": [
        "lineBreakInsert"
      ],
      "silent": true
    },
    { // 进入块选择模式
      "before": [
        "\\"
      ],
      "commands": [
        "extension.vim_ctrl+v"
      ]
    },
    { // 取消最近的撤销 等价于ctrl+z撤销，ctrl+shift+z取消撤销
      "before": [
        "<leader>",
        "u"
      ],
      "after": [
        "<C-r>"
      ]
    },
    { // 取消最近的撤销
      "before": [
        "U"
      ],
      "commands": [
        "undo"
      ]
    },
    { // 全屏查找字符串
      "before": [
        "<leader>",
        "/"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "/"
      ]
    },
    { // 全屏查找字符串
      "before": [
        "<leader>",
        "s"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "s"
      ]
    },
    { // 复制一行
      "before": [
        "<leader>",
        "p"
      ],
      "after": [
        "y",
        "y",
        "p"
      ]
    },
    { // 保存
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    { // 退出编辑 关闭当前编辑窗口
      "before": [
        "<leader>",
        "q"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    { // 移动到当前行第一个非空字符的位置
      "before": [
        "H"
      ],
      "commands": [
        "cursorHome"
      ]
    },
    { // 移动到当前行最后一个非空字符的位置
      "before": [
        "L"
      ],
      "commands": [
        "cursorEnd"
      ]
    }
  ],
  "cSpell.autoFormatConfigFile": true,
  "cSpell.userWords": [
    "appsettings",
    "asax",
    "ashx",
    "clangd",
    "easymotion",
    "editorinputs",
    "foldfix",
    "highlightedyank",
    "hlsearch",
    "incsearch",
    "leetcode",
    "norecmap",
    "Overtype",
    "preinstall",
    "resx",
    "Sysnative",
    "tabnine",
    "vimrc"
  ],
  "cSpell.ignoreWords": [
    "CHERE",
    "Menlo",
    "Powerline",
    "Siefke",
    "foxundermoon",
    "autofetch",
    "autohide",
    "dbaeumer",
    "gitgnore",
    "templating",
    "asvetliakov",
    "csscomb",
    "animejs",
    "antfu",
    "Attributify",
    "autocmd",
    "browserslist",
    "bumpp",
    "camelize",
    "cascader",
    "commafy",
    "commitlint",
    "consola",
    "Consolas",
    "decrypto",
    "demi",
    "descrition",
    "echarts",
    "encrypto",
    "esbuild",
    "eslintignore",
    "Fira",
    "forece",
    "gulpfile",
    "iconify",
    "middlewares",
    "mockjs",
    "neovim",
    "nnoremap",
    "nobackup",
    "noremap",
    "nprogress",
    "nuxt",
    "nuxtjs",
    "nvim",
    "pinia",
    "plopfile",
    "pnpm",
    "prebuild",
    "PREFFIX",
    "qwik",
    "Sider",
    "startinsert",
    "stylelint",
    "tailwindcss",
    "tauri",
    "Unocss",
    "unonu",
    "unplugin",
    "unref",
    "unstyled",
    "Vercel",
    "Vite",
    "vitejs",
    "vitepress",
    "vitesse",
    "vitest",
    "vsocde",
    "vueuse",
    "windicss",
    "zgsgs",
    "cygwin",
    "windir"
  ]
}
